<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:custom="clr-namespace:SyncPlayWPF.CustomControls"
    xmlns:dataconverters="clr-namespace:SyncPlayWPF.Converters">

    <!-- Dataconverters -->
    <dataconverters:TextBoxValueToBoolean x:Key="TextBoxValueToBoolean"/>
    <dataconverters:PercentageConverter x:Key="PercentageConverter"/>

    <!-- Images-->
    <BitmapImage x:Key="MinimizeButton" UriSource="/ImageLib/minus-line.png"/>
    <BitmapImage x:Key="CloseWindowButton" UriSource="/ImageLib/close-line.png"/>
    <BitmapImage x:Key="RestoreWindowButton" UriSource="/ImageLib/restore-window-line.png"/>
    <BitmapImage x:Key="SyncPlayLogoNew" UriSource="/ImageLib/SyncplayOriginal_NewLogo.png"/>
    <BitmapImage x:Key="SyncPlayLogoClassic" UriSource="/ImageLib/SyncplayOriginal_Logo.png"/>
    <BitmapImage x:Key="NewSessionBackDrop" UriSource="/ImageLib/NewSessionBackDrop.png"/>
    <BitmapImage x:Key="GithubOctocat" UriSource="/ImageLib/github-octocat.png"/>
    <BitmapImage x:Key="TwitterBird" UriSource="/ImageLib/twitter_logo.png"/>
    <BitmapImage x:Key="WebsiteLogo" UriSource="/ImageLib/url_icon.png"/>
    <BitmapImage x:Key="ChatIcon" UriSource="/ImageLib/chat.png"/>
    <BitmapImage x:Key="MediaIcon" UriSource="/ImageLib/media.png"/>
    <BitmapImage x:Key="SettingsIcon" UriSource="/ImageLib/settings.png"/>
    <BitmapImage x:Key="AboutIcon" UriSource="/ImageLib/about.png"/>
    <BitmapImage x:Key="EmojiButton" UriSource="/ImageLib/emoji.png"/>
    <BitmapImage x:Key="SendButton" UriSource="/ImageLib/send.png"/>
    <BitmapImage x:Key="GifButton" UriSource="/ImageLib/gif.png"/>
    <BitmapImage x:Key="CollapseButton" UriSource="/ImageLib/collapse.png"/>
    <BitmapImage x:Key="ToggleOn" UriSource="/ImageLib/toggle_on.png"/>
    <BitmapImage x:Key="ToggleOff" UriSource="/ImageLib/toggle_off.png"/>
    <BitmapImage x:Key="LoadingGif" UriSource="/ImageLib/Loading.gif"/>
    <BitmapImage x:Key="NotificationDismiss" UriSource="/ImageLib/notificationClose.png"/>
    <BitmapImage x:Key="DropDownIcon" UriSource="/ImageLib/dropdown.png"/>
    <BitmapImage x:Key="DefaultImage" UriSource="/ImageLib/DefaultImage.png"/>
    <BitmapImage x:Key="HourGlass" UriSource="/ImageLib/HourGlass.png"/>
    <BitmapImage x:Key="Warning" UriSource="/ImageLib/Warning.png"/>

    <!-- Colors -->
    <SolidColorBrush x:Key="DarkMode_AccentColorA" Color="#2B2B2B"/>
    <SolidColorBrush x:Key="DarkMode_AccentColorB" Color="#A6878787"/>
    <SolidColorBrush x:Key="DarkMode_AccentColorC" Color="#3B3B3B"/>
    <SolidColorBrush x:Key="DarkMode_AccentColorD" Color="#9E2B2B2B"/>
    <SolidColorBrush x:Key="DarkMode_AccentColorE" Color="#FF676767"/>
    
    <SolidColorBrush x:Key="DarkMode_AccentColorF" Color="#B9282828"/>
    <SolidColorBrush x:Key="DarkMode_AccentColorG" Color="#931D1D1D"/>
    <SolidColorBrush x:Key="DarkMode_AccentColorGHover" Color="#932E2E2E"/>
    <SolidColorBrush x:Key="DarkMode_AccentColorGClick" Color="#93434343"/>

    <SolidColorBrush x:Key="DarkMode_AccentColorH" Color="#B93B3B3B"/>
    <SolidColorBrush x:Key="DarkMode_AccentColorI" Color="#E7282828"/>
    <SolidColorBrush x:Key="DarkMode_AccentColorJ" Color="#F43E3E3E"/>



    <SolidColorBrush x:Key="DarkMode_TextColorA" Color="#C8C8C8"/>
    <SolidColorBrush x:Key="DarkMode_TextColorB" Color="#E1C6C6C6"/>
    <SolidColorBrush x:Key="DarkMode_TextColorC" Color="#68AAAAAA"/>
    <SolidColorBrush x:Key="DarkMode_TextColorD" Color="#515151"/>
    <SolidColorBrush x:Key="DarkMode_TextColorDHover" Color="#747474"/>
    <SolidColorBrush x:Key="DarkMode_TextColorE" Color="#747474"/>
    <SolidColorBrush x:Key="DarkMode_TextColorFHover" Color="#747474"/>
    <SolidColorBrush x:Key="DarkMode_TextColorF" Color="#AAAAAA"/>
    <SolidColorBrush x:Key="DarkMode_TextColorG" Color="#181818"/>
    
    <SolidColorBrush x:Key="DarkMode_ImageButtonImgHover" Color="#CBCBCB"/>
    <SolidColorBrush x:Key="DarkMode_ImageButtonImgClick" Color="#A3D5EC"/>
    <SolidColorBrush x:Key="DarkMode_ImageButtonHover" Color="#595959"/>
    <SolidColorBrush x:Key="DarkMode_ImageButtonClick" Color="#769AAB"/>
    <SolidColorBrush x:Key="WarningBrush" Color="#C1AB42"/>
    <SolidColorBrush x:Key="ErrorBrush" Color="#9B1F27"/>


    <Color x:Key="DarkTransparent" R="51" G="51" B="51" A="00"/>

    <LinearGradientBrush x:Key="DarkMode_ContrastedGradient">
        <GradientStop Color="#ffc206" Offset="0"/>
        <GradientStop Color="#ff5f41" Offset="0.5"/>
        <GradientStop Color="#ff1e67" Offset="1"/>
        <LinearGradientBrush.Transform>
            <RotateTransform Angle="45"/>
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkMode_ContrastedHoverGradient">
        <GradientStop Color="#FFCD34" Offset="0"/>
        <GradientStop Color="#FF846D" Offset="0.5"/>
        <GradientStop Color="#FF4F88" Offset="1"/>
        <LinearGradientBrush.Transform>
            <RotateTransform Angle="45"/>
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkMode_ContrastedClickGradient">
        <GradientStop Color="#FFDB6D" Offset="0"/>
        <GradientStop Color="#FFBFB3" Offset="0.5"/>
        <GradientStop Color="#FFA3C1" Offset="1"/>
        <LinearGradientBrush.Transform>
            <RotateTransform Angle="45"/>
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkMode_ScaleGradient">
        <GradientStop Color="#CB9B00" Offset="0"/>
        <GradientStop Color="#CE533B" Offset="0.5"/>
        <GradientStop Color="#DE1C5B" Offset="1"/>
        <LinearGradientBrush.Transform>
            <RotateTransform Angle="45"/>
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkMode_ScaleGradientTransparent">
        <GradientStop Color="#ABFFC206" Offset="0"/>
        <GradientStop Color="#ABff5f41" Offset="0.5"/>
        <GradientStop Color="#ABff1e67" Offset="1"/>
        <LinearGradientBrush.Transform>
            <RotateTransform Angle="45"/>
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkMode_ScaleHoverGradient">
        <GradientStop Color="#DEAA00" Offset="0"/>
        <GradientStop Color="#DE5A40" Offset="0.5"/>
        <GradientStop Color="#EC2163" Offset="1"/>
        <LinearGradientBrush.Transform>
            <RotateTransform Angle="45"/>
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkMode_ScaleDisabledGradient">
        <GradientStop Color="#4C3A00" Offset="0"/>
        <GradientStop Color="#6D2D20" Offset="0.5"/>
        <GradientStop Color="#670F2C" Offset="1"/>
        <LinearGradientBrush.Transform>
            <RotateTransform Angle="45"/>
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>


    <!-- Stylez -->
    <Style x:Key="DarkMode_TitleBarText" TargetType="Label">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource DarkMode_TextColorA}"/>
    </Style>

    <!-- Control templates -->
    


    <!-- Custom Controls and Styles -->

    <!-- Image buttons-->
    <Style TargetType="{x:Type custom:ImageButton}" x:Key="TitleBarButtons" BasedOn="{StaticResource {x:Type custom:ImageButton}}">
        <Setter Property="ImageHeight" Value="15"/>
        <Setter Property="ImageWidth" Value="15"/>
        <Setter Property="ImageBackgroundBrush" Value="{StaticResource DarkMode_AccentColorB}"/>
        <Setter Property="BackgroundHoverBrush" Value="{StaticResource DarkMode_ImageButtonHover}"/>
        <Setter Property="BackgroundClickBrush" Value="{StaticResource DarkMode_ImageButtonClick}"/>
        <Setter Property="ImageBackgroundHoverBrush" Value="{StaticResource DarkMode_ImageButtonImgHover}"/>
        <Setter Property="ImageBackgroundClickBrush" Value="{StaticResource DarkMode_ImageButtonImgClick}"/>
        <Setter Property="BackgroundBrush" Value="Transparent"/>
    </Style>
    <Style TargetType="{x:Type custom:ImageButton}">
        <Setter Property="Background" Value="{StaticResource DarkMode_AccentColorA}"/>
        <Setter Property="ImageHeight" Value="18"/>
        <Setter Property="ImageWidth" Value="18"/>
        <Setter Property="MinWidth" Value="32.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <!-- The control template consists of only one rectangle within a
                    border. The border will change its color as well with the hover and onclick
                    events. The rectangle will contain the actual logo. -->
                    <Border
                        Name="MainBorder"
                        Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"
                        Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}">

                        <Rectangle 
                            Name="ImageRec"
                            Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageHeight}" 
                            Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageWidth}">
                            <Rectangle.OpacityMask>
                                <ImageBrush Stretch="Uniform" ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Image}"/>
                            </Rectangle.OpacityMask>

                            <!-- Style triggers for the on hover and is clicking events -->
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageBackgroundBrush}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                            <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageBackgroundClickBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=MainBorder, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageBackgroundHoverBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>

                        </Rectangle>

                        <!-- Style triggers for the on hover and is clicking events -->
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundClickBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=MainBorder, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundHoverBrush}"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style TargetType="{x:Type custom:ImageButton}" x:Key="ImageSilhouette">
        <Setter Property="ImageWidth" Value="25"/>
        <Setter Property="ImageHeight" Value="25"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="ImageBackgroundBrush" Value="{StaticResource DarkMode_TextColorC}"/>
        <Setter Property="ImageBackgroundHoverBrush" Value="{StaticResource DarkMode_AccentColorE}"/>
        <Setter Property="ImageBackgroundClickBrush" Value="{StaticResource DarkMode_TextColorA}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:ImageButton}">
                    <Border
                        Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Margin}"
                        Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageHeight}"
                        Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageWidth}">
                        <Border.OpacityMask>
                            <ImageBrush
                                ImageSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Image}"
                                Stretch="Uniform"
                                RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Border.OpacityMask>
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="10"
                                ShadowDepth="1"/>
                        </Border.Effect>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageBackgroundBrush}"/>
                                <Style.Triggers>
                                    
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageBackgroundHoverBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageBackgroundClickBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type custom:ImageButton}" x:Key="SidePanelButtons">
        <Setter Property="Foreground" Value="{StaticResource DarkMode_TextColorE}"/>
        <Setter Property="ImageBackgroundBrush" Value="{StaticResource DarkMode_TextColorE}"/>
        <Setter Property="ImageBackgroundHoverBrush" Value="{StaticResource DarkMode_ContrastedGradient}"/>
        <Setter Property="ImageBackgroundClickBrush" Value="{StaticResource DarkMode_ContrastedHoverGradient}"/>
        <Setter Property="BackgroundBrush" Value="Transparent"/>
        <Setter Property="BackgroundHoverBrush" Value="{StaticResource DarkMode_AccentColorGHover}"/>
        <Setter Property="BackgroundClickBrush" Value="{StaticResource DarkMode_AccentColorGClick}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:ImageButton}">
                    <Border x:Name="MainBorder">
                        <Grid Margin="20,12,20,12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Rectangle Grid.Column="0" Width="30" Height="30" VerticalAlignment="Center">
                                <Rectangle.OpacityMask>
                                    <ImageBrush 
                                        ImageSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Image}"
                                        RenderOptions.BitmapScalingMode="HighQuality"/>
                                </Rectangle.OpacityMask>

                                <Rectangle.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
                                </Rectangle.Effect>

                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageBackgroundBrush}"/>
                                        <Style.Triggers>

                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageBackgroundHoverBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding  RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsPressed}" Value="True">
                                                <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageBackgroundClickBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>

                            <TextBlock
                                Grid.Column="1"
                                FontSize="13"
                                Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                                FontWeight="DemiBold"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="15,0,0,0">
                                <TextBlock.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
                                </TextBlock.Effect>
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageBackgroundBrush}"/>
                                        <Style.Triggers>

                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageBackgroundHoverBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding  RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsPressed}" Value="True">
                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageBackgroundClickBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                        
                        
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <!--<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundBrush}"/>-->
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    
                                    <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHoverBrush}"/>
                                    </DataTrigger>-->
                                    <DataTrigger Binding="{Binding  RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsPressed}" Value="True">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundClickBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Border.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                        <ColorAnimation To="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHoverBrush.Color}"
                                                        From="{StaticResource DarkTransparent}"
                                                        Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                        <ColorAnimation To="{StaticResource DarkTransparent}"
                                                        From="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHoverBrush.Color}"
                                                        Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                        
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Normal Button -->
    <Style TargetType="{x:Type Button}" x:Key="SignificantActionButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        
                        <Border x:Name="MainBorder"
                                CornerRadius="15"
                                Height="30">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="15" ShadowDepth="0" Opacity="0.5"/>
                            </Border.Effect>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Background" Value="{StaticResource DarkMode_ContrastedGradient}"/>
                                    <Style.Triggers>
                                        <!--<Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource DarkMode_ContrastedHoverGradient}"/>
                                        </Trigger>-->
                                        <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                            <Setter Property="Background" Value="{StaticResource DarkMode_ContrastedClickGradient}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <Border x:Name="HoverBorder"
                                CornerRadius="15"
                                Height="30"
                                Opacity="0"
                                Background="{StaticResource DarkMode_ContrastedHoverGradient}">
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetProperty="Opacity">
                                            <DoubleAnimation Duration="0:0:0.15" To="1" From="0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetProperty="Opacity">
                                            <DoubleAnimation Duration="0:0:0.15" To="0" From="1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Border.Triggers>
                            
                            
                        </Border>


                        <TextBlock IsHitTestVisible="False"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   FontWeight="DemiBold"
                                   Margin="10,0,10,0"
                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="SignificantSecondaryActionButton">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border 
                        Name="MainBorder"
                        CornerRadius="15"
                        Height="30">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="6" ShadowDepth="0" Opacity="1"/>
                        </Border.Effect>
                        <TextBlock
                            x:Name="ButtonLabel"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            FontWeight="DemiBold"
                            
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{StaticResource DarkMode_ContrastedGradient}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="{StaticResource DarkMode_ContrastedGradient}"/>
                                <Setter Property="Padding" Value="15,0,15,0"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource DarkMode_ContrastedHoverGradient}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Padding" Value="16,0,16,0"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                        <Setter Property="Background" Value="{StaticResource DarkMode_ContrastedClickGradient}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Padding" Value="16,0,16,0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="GenericPrimaryActionButton">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Margin" Value="1,2,1,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border 
                        Name="MainBorder"
                        CornerRadius="15"
                        Height="30"
                        Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Margin}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="6" ShadowDepth="0" Opacity="0.25"/>
                        </Border.Effect>
                        <TextBlock
                            x:Name="ButtonLabel"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            FontWeight="DemiBold"
                            FontSize="10"
                            
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="{StaticResource DarkMode_TextColorD}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource DarkMode_TextColorE}"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                        <Setter Property="Background" Value="{StaticResource DarkMode_TextColorA}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="GenericSecondaryActionButton">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Margin" Value="1,2,1,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border 
                        Name="MainBorder"
                        CornerRadius="15"
                        Height="30"
                        Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Margin}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="6" ShadowDepth="0" Opacity="0.25"/>
                        </Border.Effect>
                        <TextBlock
                            x:Name="ButtonLabel"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            FontWeight="DemiBold"
                            FontSize="10"
                            
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{StaticResource DarkMode_TextColorE}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="{StaticResource DarkMode_TextColorE}"/>
                                <Setter Property="Padding" Value="5,0,5,0"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource DarkMode_TextColorE}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Padding" Value="16,0,16,0"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                        <Setter Property="Background" Value="{StaticResource DarkMode_TextColorA}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Padding" Value="16,0,16,0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="ScrollToBottomButton">
        <Setter Property="Content" Value="???"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Height="20"
                            Margin="12, 0, 12, 0"
                            CornerRadius="5, 5, 0, 0">
                        <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                                   FontWeight="Bold"
                                   Margin="10,0,0,0"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   Foreground="{StaticResource DarkMode_TextColorG}"/>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="{StaticResource DarkMode_TextColorC}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource DarkMode_TextColorE}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Link Button -->
    <Style TargetType="{x:Type custom:LinkButton}" x:Key="LinkButton">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:LinkButton}">
                    <Border
                        x:Name="ContainerBorder">
                        <TextBlock 
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" 
                            HorizontalAlignment="Center" 
                            TextDecorations="Underline">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{StaticResource DarkMode_TextColorD}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource DarkMode_TextColorDHover}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Prompting Labels -->
    <Style TargetType="{x:Type custom:PromptingLabel}">

        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusedUnderlineBrush" Value="{StaticResource DarkMode_AccentColorB}"/>
        <Setter Property="HoverUnderlineBrush" Value="{StaticResource DarkMode_AccentColorE}"/>
        <Setter Property="Template">
            
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:PromptingLabel}">
                    <Grid Margin="3,6,3,6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="23"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TextBox
                            Margin="10,0,0,0"
                            Grid.Row="0"
                            BorderThickness="0"
                            FontSize="13"
                            Name="UserInputBox"
                            Background="Transparent"
                            Foreground="{StaticResource DarkMode_TextColorB}"
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text}">
                            
                        </TextBox>
                        <TextBlock 
                            Grid.Row="0"
                            Margin="10,0,0,0"
                            FontSize="13"
                            IsHitTestVisible="False"
                            Focusable="False"
                            FontWeight="Normal"
                            Foreground="{StaticResource DarkMode_TextColorC}"
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PromptingText}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=UserInputBox, Path=Text, Converter={StaticResource TextBoxValueToBoolean}}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=UserInputBox, Path=IsFocused}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Border 
                            SnapsToDevicePixels="True"
                            Name="Underline"
                            Grid.Row="1"
                            BorderThickness="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Background" Value="{StaticResource DarkMode_AccentColorC}"/>
                                    <Setter Property="Height" Value="1"/>
                                    <Setter Property="Margin" Value="0,1,0,0"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=UserInputBox, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverUnderlineBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=UserInputBox, Path=IsFocused}" Value="True">
                                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedUnderlineBrush}"/>
                                            <Setter Property="Height" Value="2"/>
                                            <Setter Property="Margin" Value="0,0,0,0"/>
                                        </DataTrigger>
                                        
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type custom:PromptingLabel}" x:Key="ChatPromptLabel">

        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusedUnderlineBrush" Value="{StaticResource DarkMode_AccentColorB}"/>
        <Setter Property="HoverUnderlineBrush" Value="{StaticResource DarkMode_AccentColorE}"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:PromptingLabel}">

                    <Grid Margin="3,6,3,6" ShowGridLines="True" x:Name="ContainerGrid"
                          MinWidth="{Binding Path=ActualWidth, ElementName=ContainerGrid, Converter={StaticResource PercentageConverter}, ConverterParameter='0.5'}">

                        <TextBox
                                Margin="10,0,0,0"
                                Grid.Row="0"
                                BorderThickness="0"
                                FontSize="13"
                                Name="UserInputBox"
                                TextWrapping="WrapWithOverflow"
                                Background="Transparent"
                                Foreground="{StaticResource DarkMode_TextColorF}"
                                Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Width="{Binding Path=ActualWidth, ElementName=ContainerGrid}"
                                MaxWidth="{Binding Path=ActualWidth, ElementName=ContainerGrid}">

                        </TextBox>
                        <TextBlock 
                                Grid.Row="0"
                                Margin="10,0,0,0"
                                FontSize="13"
                                IsHitTestVisible="False"
                                Focusable="False"
                                FontStyle="Italic"
                                FontWeight="Normal"
                                Foreground="{StaticResource DarkMode_TextColorC}"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PromptingText}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=UserInputBox, Path=Text, Converter={StaticResource TextBoxValueToBoolean}}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=UserInputBox, Path=IsFocused}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type custom:PromptingPasswordBox}">

        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusedUnderlineBrush" Value="{StaticResource DarkMode_AccentColorB}"/>
        <Setter Property="HoverUnderlineBrush" Value="{StaticResource DarkMode_AccentColorE}"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:PromptingPasswordBox}">
                    <Grid Margin="3,6,3,6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="23"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <PasswordBox
                            Margin="10,0,0,0"
                            Grid.Row="0"
                            BorderThickness="0"
                            FontSize="13"
                            Name="UserInputBox"
                            Background="Transparent"
                            Foreground="{StaticResource DarkMode_TextColorB}">
                        </PasswordBox>
                        <TextBlock 
                            Grid.Row="0"
                            Margin="10,0,0,0"
                            FontSize="13"
                            IsHitTestVisible="False"
                            Focusable="False"
                            FontWeight="Normal"
                            Foreground="{StaticResource DarkMode_TextColorC}"
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PromptingText}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FieldCompleted}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=UserInputBox, Path=IsFocused}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Border 
                            SnapsToDevicePixels="True"
                            Name="Underline"
                            Grid.Row="1"
                            BorderThickness="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Background" Value="{StaticResource DarkMode_AccentColorC}"/>
                                    <Setter Property="Height" Value="1"/>
                                    <Setter Property="Margin" Value="0,1,0,0"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=UserInputBox, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverUnderlineBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=UserInputBox, Path=IsFocused}" Value="True">
                                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedUnderlineBrush}"/>
                                            <Setter Property="Height" Value="2"/>
                                            <Setter Property="Margin" Value="0,0,0,0"/>
                                        </DataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Checkboxes -->
    <Style TargetType="CheckBox" x:Key="GenericCheckboxLowFidelity">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Width="auto" Background="Transparent" HorizontalAlignment="Left" Name="ContainerBorder" Margin="3">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">


                                <Border 
                                    x:Name="ToggleContainer"
                                    Margin="0,0,10,0"
                                    VerticalAlignment="Center"
                                    Height="20"
                                    Width="34"
                                    Background="{StaticResource DarkMode_AccentColorE}">
                                    <Border.OpacityMask>
                                        <ImageBrush RenderOptions.BitmapScalingMode="HighQuality" ImageSource="{StaticResource ToggleOff}"/>
                                    </Border.OpacityMask>
                                </Border>
                            </Grid>
                            <Border Grid.Column="1" Margin="0,0,0,0" Padding="0,0,0,0">
                                <TextBlock 
                                    VerticalAlignment="Center"
                                    Text="{TemplateBinding Content}"
                                    FontSize="12"
                                    Foreground="{StaticResource DarkMode_AccentColorE}"
                                    FontWeight="DemiBold">
                                </TextBlock>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{StaticResource DarkMode_ScaleGradient}" TargetName="ToggleContainer"/>
                            <Setter Property="OpacityMask" TargetName="ToggleContainer">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{StaticResource ToggleOn}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource DarkMode_ScaleHoverGradient}" TargetName="ToggleContainer"/>
                        </Trigger>-->

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{StaticResource DarkMode_ScaleDisabledGradient}" TargetName="ToggleContainer"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{StaticResource DarkMode_ScaleHoverGradient}" TargetName="ToggleContainer"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="CheckBox" x:Key="GenericCheckbox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Width="auto" Background="Transparent" HorizontalAlignment="Left" Name="ContainerBorder" Margin="15,1,15,1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                
                       
                                <Border 
                                    x:Name="ToggleContainer"
                                    Margin="0,0,10,0"
                                    VerticalAlignment="Center"
                                    Height="20"
                                    Width="34"
                                    Background="{StaticResource DarkMode_AccentColorC}"
                                    RenderOptions.BitmapScalingMode="HighQuality">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
                                    </Border.Effect>
                                    <Border.OpacityMask>
                                        <ImageBrush RenderOptions.BitmapScalingMode="HighQuality" ImageSource="{StaticResource ToggleOff}"/>
                                    </Border.OpacityMask>
                                </Border>
                            </Grid>
                            <Border Grid.Column="1" Margin="-5,0,0,0" Padding="0,0,0,1">
                                <TextBlock 
                                    VerticalAlignment="Center"
                                    Text="{TemplateBinding Content}"
                                    Foreground="{StaticResource DarkMode_AccentColorE}"
                                    FontWeight="DemiBold">
                                    <TextBlock.Effect>
                                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
                                    </TextBlock.Effect>
                                </TextBlock>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{StaticResource DarkMode_ScaleGradient}" TargetName="ToggleContainer"/>
                            <Setter Property="OpacityMask" TargetName="ToggleContainer">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{StaticResource ToggleOn}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource DarkMode_ScaleHoverGradient}" TargetName="ToggleContainer"/>
                        </Trigger>-->

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{StaticResource DarkMode_ScaleDisabledGradient}" TargetName="ToggleContainer"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{StaticResource DarkMode_ScaleHoverGradient}" TargetName="ToggleContainer"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DropDown" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Height="30" Width="50" Margin="0,0,0,0" CornerRadius="0,0,10,10">
                        <Rectangle Margin="0" Fill="{StaticResource DarkMode_AccentColorB}" Height="30" Width="30">
                            
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="{StaticResource DropDownIcon}" Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="{StaticResource DarkMode_AccentColorD}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource DarkMode_AccentColorA}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- TextBlocks -->
    <Style TargetType="TextBlock" x:Key="ChatInfo">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource DarkMode_TextColorE}"/>
    </Style>

    <!-- Chat bubbles -->
    <Style TargetType="{x:Type custom:ChatMessage}" x:Key="IncomingMessage">
        <Setter Property="IsInitialMessage" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:ChatMessage}">

                    <!-- -->
                    <Border x:Name="Container" Background="Transparent" IsHitTestVisible="False" Margin="0,0,0,0">
                        <Border
                            Grid.Row="1"
                            Background="{StaticResource DarkMode_AccentColorI}"
                            MaxWidth="{Binding Path=ActualWidth, ElementName=Container, Converter={StaticResource PercentageConverter}, ConverterParameter='0.75'}"
                            MinWidth="150"
                            Margin="2"
                            CornerRadius="12"
                            Padding="12,6,12,6"
                            HorizontalAlignment="Left">

                            <Border.Effect>
                                <DropShadowEffect BlurRadius="10" Opacity="0.5" ShadowDepth="0"/>
                            </Border.Effect>

                            <Grid ShowGridLines="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock 
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MessageSender}"
                                    Foreground="{StaticResource DarkMode_ScaleGradient}"
                                    FontWeight="DemiBold"
                                    Width="auto"
                                    Margin="0,0,0,2">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsInitialMessage}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock 
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Margin="0,0,10,0"
                                    Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MessageContent}"
                                    Foreground="{StaticResource DarkMode_TextColorF}"
                                    TextWrapping="WrapWithOverflow"
                                    VerticalAlignment="Bottom"
                                    Grid.ColumnSpan="1"
                                    Width="auto"/>
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    FontSize="10"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MessageTime}"
                                    Foreground="{StaticResource DarkMode_TextColorD}"/>
                            </Grid>
                        </Border>
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Border.Loaded">
                                <BeginStoryboard>
                                    <Storyboard >
                                        <ThicknessAnimation Duration="0:0:0.1"
                                                            To="0,0,0,0"
                                                            From="0,0,0,-55"
                                                            Storyboard.TargetProperty="Margin"/>
                                        <DoubleAnimation Duration="0:0:0.05"
                                                         To="1"
                                                         From="0"
                                                         Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type custom:ChatMessage}" x:Key="OutgoingMessage">
        <Setter Property="IsInitialMessage" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:ChatMessage}">

                    <!-- -->
                    <Border x:Name="Container" Background="Transparent" IsHitTestVisible="False" Margin="0,0,0,0">
                        <Border
                            Grid.Row="1"
                            Background="{StaticResource DarkMode_AccentColorH}"
                            MaxWidth="{Binding Path=ActualWidth, ElementName=Container, Converter={StaticResource PercentageConverter}, ConverterParameter='0.75'}"
                            MinWidth="125"
                            Margin="2"
                            CornerRadius="10"
                            Padding="12,6,12,6"
                            HorizontalAlignment="Right">

                            <Border.Effect>
                                <DropShadowEffect BlurRadius="10" Opacity="0.5" ShadowDepth="0"/>
                            </Border.Effect>

                            <Grid ShowGridLines="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock 
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MessageSender}"
                                    Foreground="{StaticResource DarkMode_ScaleGradient}"
                                    FontWeight="DemiBold"
                                    Width="auto"
                                    Visibility="Collapsed"
                                    Margin="0,0,0,2">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsInitialMessage}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock 
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Margin="0,0,10,0"
                                    Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MessageContent}"
                                    Foreground="{StaticResource DarkMode_TextColorF}"
                                    TextWrapping="WrapWithOverflow"
                                    VerticalAlignment="Bottom"
                                    
                                    Width="auto"/>
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    FontSize="10"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MessageTime}"
                                    Foreground="{StaticResource DarkMode_TextColorD}"/>
                            </Grid>
                        </Border>
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Border.Loaded">
                                <BeginStoryboard>
                                    <Storyboard >
                                        <ThicknessAnimation Duration="0:0:0.1"
                                                            To="0,0,0,0"
                                                            From="0,0,0,-55"
                                                            Storyboard.TargetProperty="Margin"/>
                                        <DoubleAnimation Duration="0:0:0.05"
                                                         To="1"
                                                         From="0"
                                                         Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Scroll bar -->
    <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <SolidColorBrush x:Key="NormalBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#383838" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="ListBoxBackgroundBrush" Color="#959592"/>
    <SolidColorBrush x:Key="StandardBrush" Color="#959592"/>
    <SolidColorBrush x:Key="PressedBrush" Color="#959592"/>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="8" Margin="8,0,-2,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="0"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
            <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                   
                        <ScrollContentPresenter Grid.Column="0"/>
                        <ScrollBar
                            Grid.Column="1"
                            Margin="0,5,5,5"
                            Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <!-- Media File Control -->
    <Style TargetType="{x:Type custom:MediaFileControl}">
        <Setter Property="User" Value="UserNameNotDefined"/>
        <Setter Property="FileName" Value="FileNameNotDefined"/>
        <Setter Property="FileDuration" Value="FileDurationNotDefined"/>
        <Setter Property="FileSize" Value="FileSizeNotDefined"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:MediaFileControl}">
                    <Border 
                        Background="{StaticResource DarkMode_AccentColorA}"
                        Margin="10,5,0,5"
                        CornerRadius="10">

                        <Border.Effect>
                            <DropShadowEffect BlurRadius="12" ShadowDepth="0" Opacity="0.5"/>
                        </Border.Effect>

                        <Grid 
                            Margin="15, 10, 10, 10">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            
                            

                            <TextBlock 
                                Grid.Row="0"
                                FontSize="13"
                                Margin="0,0,0,3"
                                FontWeight="DemiBold"
                                Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=User}"
                                Foreground="{StaticResource DarkMode_ContrastedGradient}"/>

                            <TextBlock
                                Grid.Row="1"
                                Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FileName}"
                                Foreground="{StaticResource DarkMode_TextColorA}"/>

                            <TextBlock
                                Grid.Row="1"
                                Grid.Column="1"
                                Margin="10,0,0,0"
                                Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FileSize}"
                                Foreground="{StaticResource DarkMode_TextColorC}"/>

                            <TextBlock
                                Margin="0,2,0,0"
                                Grid.Row="2"
                                Grid.Column="0"
                                Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FileDuration}"
                                Foreground="{StaticResource DarkMode_TextColorC}"/>


                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Expander -->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="14" Height="14">
                        <Rectangle Fill="{DynamicResource primaryBackgroundBrush}" />
                        <Border Name="ExpandBorder" RenderOptions.EdgeMode="Aliased" BorderBrush="Black" BorderThickness="2">
                            <Path RenderOptions.EdgeMode="Aliased" Name="ExpandPath" Stroke="Black" Margin="0" StrokeThickness="2" Data="M 5 1 L 5 9 M 1 5 L 9 5" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 1 5 L 9 5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ExpandBorder" Property="BorderBrush" Value="Gray" />
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="Gray" />
                            <Setter Property="Data" TargetName="ExpandPath" Value=""/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Border" x:Key="ChatInfoSpacer">
        <Setter Property="Height" Value="10"/>
    </Style>
    <Style TargetType="Border" x:Key="ThinChatInfoSpacer">
        <Setter Property="Height" Value="5"/>
    </Style>
    <Style TargetType="{x:Type custom:UserSessionView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:UserSessionView}">
                    <Border Background="{StaticResource DarkMode_AccentColorH}" Margin="5,0,5,5" CornerRadius="5" >
                        <Grid ShowGridLines="False"
                              Margin="10,5,5,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0"
                                       Grid.Column="0"
                                       Grid.RowSpan="2"
                                       FontWeight="DemiBold"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       TextAlignment="Center"
                                       TextWrapping="Wrap"
                                       MaxWidth="60"
                                       Width="60"
                                       Margin="0,0,10,0"
                                       FontSize="12"
                                       Foreground="{StaticResource DarkMode_TextColorA}"
                                       Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Username}"/>


                            <TextBlock Grid.Row="0"
                                       Grid.Column="1"
                                       Grid.ColumnSpan="1"
                                       Margin="0,0,10,0"
                                       Foreground="{StaticResource DarkMode_TextColorA}"
                                       Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FileName}"/>

                            <Grid Grid.Row="1"
                                  Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0"
                                           Margin="0,0,10,0"
                                           FontSize="12"
                                           Foreground="{StaticResource DarkMode_TextColorC}"
                                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FileSize}"/>

                                <TextBlock Grid.Column="2"
                                           FontSize="12"
                                           Foreground="{StaticResource DarkMode_TextColorC}"
                                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FileDuration}"/>

                            </Grid>

                            <StackPanel Orientation="Horizontal"
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Grid.Column="2"
                                        Margin="0,0,0,0">
                                <!--<custom:StatusImage Image="{StaticResource HourGlass}"/>-->
                                <custom:StatusImage Image="{StaticResource Warning}"
                                                    ImageBackgroundBrush="{StaticResource WarningBrush}"/>
                            </StackPanel>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type custom:ToastNotification}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:ToastNotification}">
                    <Border Margin="0,-100,0,0">
                        <Border Background="{StaticResource DarkMode_AccentColorD}" Margin="7,2,0,2" CornerRadius="10">
                            <Grid Margin="7" ShowGridLines="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Title}"
                                           Grid.Column="1" Grid.Row="0"
                                           Margin="0,0,0,0"
                                           FontSize="15" FontWeight="DemiBold" Foreground="{StaticResource DarkMode_TextColorE}"/>
                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Message}"
                                           Grid.Column="1" Grid.Row="1"
                                           TextWrapping="WrapWithOverflow"
                                           Foreground="{StaticResource DarkMode_TextColorC}"/>
                                <custom:ImageButton 
                                    Grid.Column="0"
                                    Grid.RowSpan="2"
                                    Margin="0,0,5,0"
                                    ImageWidth="30"
                                    Style="{StaticResource ImageSilhouette}"
                                    Image="{StaticResource NotificationDismiss}" x:Name="CloseButton"/>
                            </Grid>


                        </Border>

                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Border.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.5"
                                                            From="0,-100,0,0"
                                                            To="0,0,0,0"
                                                            Storyboard.TargetProperty="Margin"/>
                                        <DoubleAnimation Duration="0:0:0.25"
                                                         To="1"
                                                         From="0"
                                                         Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type custom:StatusImage}">
        <Setter Property="Image" Value="{StaticResource DefaultImage}"/>
        <Setter Property="ImageBackgroundBrush" Value="{StaticResource DarkMode_AccentColorB}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:StatusImage}">
                    <Rectangle Height="25" 
                               Width="25"
                               Margin="3"
                               Fill="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageBackgroundBrush}">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Image}" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tab Stuff -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Border  Padding="3">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Padding="10,0,0,0">
                                <TabPanel IsItemsHost="True" Name="HeaderPanel"  Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"/>
                            </Border>
                            <Border Grid.Row="1" CornerRadius="5" Padding="5" Background="{StaticResource DarkMode_AccentColorA}">
                                <ContentPresenter ContentSource="SelectedContent"/>
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="13" ShadowDepth="0" Opacity="0.5"/>
                                </Border.Effect>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" CornerRadius="5,5,0,0" Margin="2,0,2,0" Height="26">
                        <TextBlock x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Text="{TemplateBinding Header}"
                                        Margin="20,2"
                                        Foreground="{StaticResource DarkMode_TextColorF}"
                                        FontWeight="Normal">
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkMode_AccentColorC}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkMode_AccentColorA}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
